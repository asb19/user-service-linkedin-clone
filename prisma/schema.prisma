// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id     String  @id() @default(cuid())
  email  String  @unique()
  altEmail  String?
  firstName  String?
  lastName   String?
  contactNo  String?  @unique()
  altContactNo  String?
  Password String?
  userType    USER_TYPE @default(individual)
  emailVerified  Boolean @default(false)
  smsVerified    Boolean @default(false)
  createdAt  DateTime  @default(now())  
  UserProfile    UserProfile?

}

model UserProfile {
  userId      String @id
  photoUrl    String?
  dob         DateTime?  @db.Date
  gender      GENDER
  adhaarNo    String?
  passportNo  String?
  passportValidity  DateTime? @db.Date
  passportPlaceAndCountryOfIssue  String?
  currentLocationId  Int?
  homeLocationId     Int?
  preferredLocations               Int[]
  mediaUrls           String[]
  currentLocation    City?  @relation(fields: [currentLocationId], name: "CurrentLocation",  references: [id])
  homeLocation    City?  @relation(fields: [homeLocationId], name: "HomeLocation" ,references: [id])
  User        User     @relation(fields: [userId], references:[id])
  UserEducation     UserEducation[]
}

model UserEducation {
  userId     String  
  id      String  @id @default(cuid())
  degreeOrDiploma   String
  field             String
  fromTime          DateTime? @db.Date
  endTime           DateTime? @db.Date
  description       String
  mediaUrls         String[]
  statusId          Int       @default(1)
  UserProfile       UserProfile  @relation(fields: [userId], references: [userId], onDelete:Cascade, onUpdate:NoAction)
}


model Country {
  id   Int  @id @default(autoincrement())
  name  String
  phoneCode  String
  State    State[]
}

model State {
  id  Int  @id @default(autoincrement())
  name String
  fullName  String
  countryId Int
  Country   Country  @relation(fields: [countryId], references:[id])
  City      City[]
}

model City {
  id  Int  @id @default(autoincrement())
  name String
  fullName  String
  stateId Int
  State   State  @relation(fields: [stateId], references:[id])
  currentLocationOf  UserProfile[] @relation("CurrentLocation")
  homeLocationOf     UserProfile[] @relation("HomeLocation")

}

enum USER_TYPE {
  individual
  recruiter
}

enum GENDER {
  Male
  Female
  Other
}